"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6218],{3905:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return d},MDXProvider:function(){return p},mdx:function(){return h},useMDXComponents:function(){return s},withMDXComponents:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),m=function(e){return function(t){var n=s(t.components);return r.createElement(e,i({},t,{components:n}))}},s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),m=s(n),p=a,f=m["".concat(l,".").concat(p)]||m[p]||c[p]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},79147:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return c},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),l=["components"],o={id:"getting-started",title:"Getting Started with CG/SQL",sidebar_label:"Getting Started"},u=void 0,d={unversionedId:"getting-started",id:"getting-started",title:"Getting Started with CG/SQL",description:"Building",source:"@site/../docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started with CG/SQL",sidebar_label:"Getting Started"},sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Playground",permalink:"/docs/playground"}},m={},s=[{value:"Building",id:"building",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Requirements",id:"requirements",level:2},{value:"MacOS Users",id:"macos-users",level:3},{value:"Linux Users",id:"linux-users",level:3},{value:"Options",id:"options",level:2},{value:"Amalgam Build",id:"amalgam-build",level:2}],p={toc:s};function c(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.mdx)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("h2",{id:"building"},"Building"),(0,i.mdx)("admonition",{type:"caution"},(0,i.mdx)("p",{parentName:"admonition"},"Please make sure you meet the ",(0,i.mdx)("a",{parentName:"p",href:"#requirements"},"requirements"),".")),(0,i.mdx)("p",null,"Set your current directory to the CG/SQL ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/facebookincubator/CG-SQL/tree/main/sources"},(0,i.mdx)("inlineCode",{parentName:"a"},"sources"))," directory, wherever that may be, then:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"make clean\nmake\n")),(0,i.mdx)("p",null,"This compiles CQL and puts the result at ",(0,i.mdx)("inlineCode",{parentName:"p"},"out/cql"),". Now you can run it to show available command options (also ",(0,i.mdx)("a",{parentName:"p",href:"https://cgsql.dev/cql-guide/x1"},"documented here"),"):"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-bash"},"$ out/cql\n")),(0,i.mdx)("p",null,"You might want to alias the location of ",(0,i.mdx)("inlineCode",{parentName:"p"},"out/cql"),". For example, by using the ",(0,i.mdx)("inlineCode",{parentName:"p"},"alias")," command in Linux or MacOS."),(0,i.mdx)("h2",{id:"next-steps"},"Next Steps"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Go to the ",(0,i.mdx)("a",{parentName:"li",href:"/cql-guide/ch01#getting-started"},"first chapter of the CQL Guide")," to write your first CQL program!\nThe ",(0,i.mdx)("a",{parentName:"li",href:"/cql-guide/ch02#a-sample-program"},"second chapter")," has a less trivial program that walks through how to query a SQLite database with CQL."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"/cql-guide/x6"},"CGL Language Cheatsheet")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"/docs/playground"},"CQL Playground"))),(0,i.mdx)("h2",{id:"requirements"},"Requirements"),(0,i.mdx)("h3",{id:"macos-users"},"MacOS Users"),(0,i.mdx)("p",null,"The default bison and flex on Mac are quite old.  You'll need to replace them. The Build\nproduces an error if this is happening.  You can get a more recent versions like this:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"  brew install bison\n  brew link bison --force\n  brew install flex\n  brew link flex --force\n")),(0,i.mdx)("h3",{id:"linux-users"},"Linux Users"),(0,i.mdx)("p",null,"The default SQLite on Ubuntu systems is also fairly old.  Some of the tests (particularly\nthe query plan tests) use features not available in this version.  You'll want to link\nagainst a newer sqlite to pass all the tests."),(0,i.mdx)("p",null,"From a bare Ubuntu installation, you might need to add these components:"),(0,i.mdx)("p",null,"sudo apt install"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"make"),(0,i.mdx)("li",{parentName:"ul"},"gcc"),(0,i.mdx)("li",{parentName:"ul"},"flex"),(0,i.mdx)("li",{parentName:"ul"},"bison"),(0,i.mdx)("li",{parentName:"ul"},"sqlite3"),(0,i.mdx)("li",{parentName:"ul"},"libsqlite3-dev")),(0,i.mdx)("p",null,"After which I was able to do the normal installations."),(0,i.mdx)("p",null,"For the coverage build you need"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"gcovr")),(0,i.mdx)("p",null,"And if you want to do the AST visualizations in PNG form you need"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"graphviz")),(0,i.mdx)("h2",{id:"options"},"Options"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},"If you add ",(0,i.mdx)("inlineCode",{parentName:"p"},"CGSQL_GCC")," to your environment the ",(0,i.mdx)("inlineCode",{parentName:"p"},"Makefile")," will add ",(0,i.mdx)("inlineCode",{parentName:"p"},"CFLAGS += -std=c99"),"\nto try to be more interoperable with gcc.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},"If you add ",(0,i.mdx)("inlineCode",{parentName:"p"},"SQLITE_PATH")," to your environment the ",(0,i.mdx)("inlineCode",{parentName:"p"},"Makefile")," will try to compile ",(0,i.mdx)("inlineCode",{parentName:"p"},"sqlite3-all.c")," from that path\nand it will link that in instead of using ",(0,i.mdx)("inlineCode",{parentName:"p"},"-lsqlite3"),"."))),(0,i.mdx)("h2",{id:"amalgam-build"},"Amalgam Build"),(0,i.mdx)("p",null,"The amalgam is created by ",(0,i.mdx)("inlineCode",{parentName:"p"},"./make_amalgam.sh")," and the result is in ",(0,i.mdx)("inlineCode",{parentName:"p"},"out/cql_amalgam.c")),(0,i.mdx)("p",null,"You can create and test the amalgam in one step (preferred) using"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"./test.sh --use_amalgam\n")),(0,i.mdx)("p",null,"This will cause the amalgam to be created and compiled.  Then the test suite will run against that binary."))}c.isMDXComponent=!0}}]);