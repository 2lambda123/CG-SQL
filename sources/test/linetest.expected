/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

LINE TEST EXPECTED OUTPUT

line numbers are relative to the line the #define _PROC_
anything outside the #define and #undef for _PROC is ignored

First test case and remember this is ignored in this file, it's just here for your viewing pleasure
the source of truth is in test/linetest.sql

----------------
 1: create proc foo()
 2: begin
 3:   if 1 then
 4:    call printf("one");
 5:  else
 6:    call printf("two");
 7:   end if;
 8:
 9:   declare x integer;
10:
11:   set x :=  coalesce( case 
12:              when  1 
13:              then 200
14:              when 2
15:              then 300
16:              end, 
17:             3000);
18:    
19: end;
----------------

#define _PROC_ "foo"
# 1
void foo(void) {
# 1
  cql_nullable_int32 x;
# 1
  cql_set_null(x);
# 1
  cql_int32 _tmp_int_0 = 0;
# 1
  cql_nullable_int32 _tmp_n_int_1;
# 1
  cql_set_null(_tmp_n_int_1);
# 1

# 3 "test/linetest.sql"
# 3 "test/linetest.sql"
  if (1) {
# 4 "test/linetest.sql"
    printf("one");
# 4 "test/linetest.sql"
  }
# 6 "test/linetest.sql"
  else {
# 6 "test/linetest.sql"
    printf("two");
# 6
  }
# 9 "test/linetest.sql"
# 11 "test/linetest.sql"
# 11 "test/linetest.sql"
  do {
# 16 "test/linetest.sql"
# 12 "test/linetest.sql"
    do {
# 12 "test/linetest.sql"
      if (1) {
# 13 "test/linetest.sql"
        cql_set_notnull(_tmp_n_int_1, 200);
# 13
        break;
# 13
      }
# 14 "test/linetest.sql"
      if (2) {
# 15 "test/linetest.sql"
        cql_set_notnull(_tmp_n_int_1, 300);
# 15
        break;
# 15
      }
# 16 "test/linetest.sql"
      cql_set_null(_tmp_n_int_1);
# 16
    } while (0);
# 16
    if (!_tmp_n_int_1.is_null) {
# 16
      _tmp_int_0 = _tmp_n_int_1.value;
# 16
      break;
# 16
    }
# 17 "test/linetest.sql"
    _tmp_int_0 = 3000;
# 17
  } while (0);
# 17
  cql_set_notnull(x, _tmp_int_0);
# 18 "test/linetest.sql"

# 18
}
#undef _PROC_
